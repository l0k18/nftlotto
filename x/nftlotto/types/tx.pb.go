// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nftlotto/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateLottery struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TicketPrice uint64 `protobuf:"varint,3,opt,name=ticketPrice,proto3" json:"ticketPrice,omitempty"`
	DrawHeight  uint64 `protobuf:"varint,4,opt,name=drawHeight,proto3" json:"drawHeight,omitempty"`
}

func (m *MsgCreateLottery) Reset()         { *m = MsgCreateLottery{} }
func (m *MsgCreateLottery) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLottery) ProtoMessage()    {}
func (*MsgCreateLottery) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{0}
}
func (m *MsgCreateLottery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLottery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLottery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLottery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLottery.Merge(m, src)
}
func (m *MsgCreateLottery) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLottery) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLottery.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLottery proto.InternalMessageInfo

func (m *MsgCreateLottery) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateLottery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateLottery) GetTicketPrice() uint64 {
	if m != nil {
		return m.TicketPrice
	}
	return 0
}

func (m *MsgCreateLottery) GetDrawHeight() uint64 {
	if m != nil {
		return m.DrawHeight
	}
	return 0
}

type MsgCreateLotteryResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateLotteryResponse) Reset()         { *m = MsgCreateLotteryResponse{} }
func (m *MsgCreateLotteryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLotteryResponse) ProtoMessage()    {}
func (*MsgCreateLotteryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{1}
}
func (m *MsgCreateLotteryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLotteryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLotteryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLotteryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLotteryResponse.Merge(m, src)
}
func (m *MsgCreateLotteryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLotteryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLotteryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLotteryResponse proto.InternalMessageInfo

func (m *MsgCreateLotteryResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateLottery struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	TicketPrice uint64 `protobuf:"varint,4,opt,name=ticketPrice,proto3" json:"ticketPrice,omitempty"`
	DrawHeight  uint64 `protobuf:"varint,5,opt,name=drawHeight,proto3" json:"drawHeight,omitempty"`
}

func (m *MsgUpdateLottery) Reset()         { *m = MsgUpdateLottery{} }
func (m *MsgUpdateLottery) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLottery) ProtoMessage()    {}
func (*MsgUpdateLottery) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{2}
}
func (m *MsgUpdateLottery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLottery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLottery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLottery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLottery.Merge(m, src)
}
func (m *MsgUpdateLottery) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLottery) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLottery.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLottery proto.InternalMessageInfo

func (m *MsgUpdateLottery) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateLottery) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateLottery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateLottery) GetTicketPrice() uint64 {
	if m != nil {
		return m.TicketPrice
	}
	return 0
}

func (m *MsgUpdateLottery) GetDrawHeight() uint64 {
	if m != nil {
		return m.DrawHeight
	}
	return 0
}

type MsgUpdateLotteryResponse struct {
}

func (m *MsgUpdateLotteryResponse) Reset()         { *m = MsgUpdateLotteryResponse{} }
func (m *MsgUpdateLotteryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLotteryResponse) ProtoMessage()    {}
func (*MsgUpdateLotteryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{3}
}
func (m *MsgUpdateLotteryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLotteryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLotteryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLotteryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLotteryResponse.Merge(m, src)
}
func (m *MsgUpdateLotteryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLotteryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLotteryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLotteryResponse proto.InternalMessageInfo

type MsgDeleteLottery struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteLottery) Reset()         { *m = MsgDeleteLottery{} }
func (m *MsgDeleteLottery) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLottery) ProtoMessage()    {}
func (*MsgDeleteLottery) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{4}
}
func (m *MsgDeleteLottery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLottery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLottery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLottery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLottery.Merge(m, src)
}
func (m *MsgDeleteLottery) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLottery) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLottery.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLottery proto.InternalMessageInfo

func (m *MsgDeleteLottery) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteLottery) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteLotteryResponse struct {
}

func (m *MsgDeleteLotteryResponse) Reset()         { *m = MsgDeleteLotteryResponse{} }
func (m *MsgDeleteLotteryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLotteryResponse) ProtoMessage()    {}
func (*MsgDeleteLotteryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{5}
}
func (m *MsgDeleteLotteryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLotteryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLotteryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLotteryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLotteryResponse.Merge(m, src)
}
func (m *MsgDeleteLotteryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLotteryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLotteryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLotteryResponse proto.InternalMessageInfo

type MsgCreateTicket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Lottery uint64 `protobuf:"varint,2,opt,name=lottery,proto3" json:"lottery,omitempty"`
}

func (m *MsgCreateTicket) Reset()         { *m = MsgCreateTicket{} }
func (m *MsgCreateTicket) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTicket) ProtoMessage()    {}
func (*MsgCreateTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{6}
}
func (m *MsgCreateTicket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTicket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTicket.Merge(m, src)
}
func (m *MsgCreateTicket) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTicket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTicket proto.InternalMessageInfo

func (m *MsgCreateTicket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTicket) GetLottery() uint64 {
	if m != nil {
		return m.Lottery
	}
	return 0
}

type MsgCreateTicketResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTicketResponse) Reset()         { *m = MsgCreateTicketResponse{} }
func (m *MsgCreateTicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTicketResponse) ProtoMessage()    {}
func (*MsgCreateTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{7}
}
func (m *MsgCreateTicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTicketResponse.Merge(m, src)
}
func (m *MsgCreateTicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTicketResponse proto.InternalMessageInfo

func (m *MsgCreateTicketResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTicket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Lottery uint64 `protobuf:"varint,3,opt,name=lottery,proto3" json:"lottery,omitempty"`
}

func (m *MsgUpdateTicket) Reset()         { *m = MsgUpdateTicket{} }
func (m *MsgUpdateTicket) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTicket) ProtoMessage()    {}
func (*MsgUpdateTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{8}
}
func (m *MsgUpdateTicket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTicket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTicket.Merge(m, src)
}
func (m *MsgUpdateTicket) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTicket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTicket proto.InternalMessageInfo

func (m *MsgUpdateTicket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTicket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTicket) GetLottery() uint64 {
	if m != nil {
		return m.Lottery
	}
	return 0
}

type MsgUpdateTicketResponse struct {
}

func (m *MsgUpdateTicketResponse) Reset()         { *m = MsgUpdateTicketResponse{} }
func (m *MsgUpdateTicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTicketResponse) ProtoMessage()    {}
func (*MsgUpdateTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{9}
}
func (m *MsgUpdateTicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTicketResponse.Merge(m, src)
}
func (m *MsgUpdateTicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTicketResponse proto.InternalMessageInfo

type MsgDeleteTicket struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTicket) Reset()         { *m = MsgDeleteTicket{} }
func (m *MsgDeleteTicket) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTicket) ProtoMessage()    {}
func (*MsgDeleteTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{10}
}
func (m *MsgDeleteTicket) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTicket.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTicket.Merge(m, src)
}
func (m *MsgDeleteTicket) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTicket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTicket proto.InternalMessageInfo

func (m *MsgDeleteTicket) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTicket) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTicketResponse struct {
}

func (m *MsgDeleteTicketResponse) Reset()         { *m = MsgDeleteTicketResponse{} }
func (m *MsgDeleteTicketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTicketResponse) ProtoMessage()    {}
func (*MsgDeleteTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_46a557ee3119ee4c, []int{11}
}
func (m *MsgDeleteTicketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTicketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTicketResponse.Merge(m, src)
}
func (m *MsgDeleteTicketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTicketResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateLottery)(nil), "l0k18.nftlotto.nftlotto.MsgCreateLottery")
	proto.RegisterType((*MsgCreateLotteryResponse)(nil), "l0k18.nftlotto.nftlotto.MsgCreateLotteryResponse")
	proto.RegisterType((*MsgUpdateLottery)(nil), "l0k18.nftlotto.nftlotto.MsgUpdateLottery")
	proto.RegisterType((*MsgUpdateLotteryResponse)(nil), "l0k18.nftlotto.nftlotto.MsgUpdateLotteryResponse")
	proto.RegisterType((*MsgDeleteLottery)(nil), "l0k18.nftlotto.nftlotto.MsgDeleteLottery")
	proto.RegisterType((*MsgDeleteLotteryResponse)(nil), "l0k18.nftlotto.nftlotto.MsgDeleteLotteryResponse")
	proto.RegisterType((*MsgCreateTicket)(nil), "l0k18.nftlotto.nftlotto.MsgCreateTicket")
	proto.RegisterType((*MsgCreateTicketResponse)(nil), "l0k18.nftlotto.nftlotto.MsgCreateTicketResponse")
	proto.RegisterType((*MsgUpdateTicket)(nil), "l0k18.nftlotto.nftlotto.MsgUpdateTicket")
	proto.RegisterType((*MsgUpdateTicketResponse)(nil), "l0k18.nftlotto.nftlotto.MsgUpdateTicketResponse")
	proto.RegisterType((*MsgDeleteTicket)(nil), "l0k18.nftlotto.nftlotto.MsgDeleteTicket")
	proto.RegisterType((*MsgDeleteTicketResponse)(nil), "l0k18.nftlotto.nftlotto.MsgDeleteTicketResponse")
}

func init() { proto.RegisterFile("nftlotto/tx.proto", fileDescriptor_46a557ee3119ee4c) }

var fileDescriptor_46a557ee3119ee4c = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0xae, 0x93, 0x40,
	0x14, 0x2e, 0x3f, 0xd7, 0x1b, 0x8f, 0x5e, 0x7f, 0x26, 0xd1, 0x8b, 0x2c, 0x48, 0xc3, 0x8a, 0x7b,
	0x17, 0xb4, 0xd5, 0x8d, 0x89, 0xae, 0xb4, 0x26, 0x2e, 0x6c, 0x62, 0x88, 0xdd, 0xb8, 0x6b, 0x61,
	0xa4, 0xd8, 0x52, 0x08, 0x8c, 0xb1, 0xdd, 0xfa, 0x04, 0xc6, 0x85, 0xcf, 0xe4, 0xb2, 0x4b, 0x97,
	0xa6, 0x7d, 0x11, 0xc3, 0x0c, 0x4c, 0x19, 0xa4, 0x80, 0x77, 0xd3, 0xcc, 0x9c, 0x9e, 0xf3, 0xfd,
	0x9c, 0x7c, 0x0c, 0x3c, 0x5c, 0x7f, 0x22, 0xab, 0x88, 0x90, 0x68, 0x40, 0x36, 0x76, 0x9c, 0x44,
	0x24, 0x42, 0x97, 0xab, 0xe1, 0x72, 0xf4, 0xdc, 0x2e, 0xfe, 0xe0, 0x07, 0xfd, 0x31, 0xef, 0xcd,
	0x7e, 0x71, 0xb2, 0x65, 0x03, 0xfa, 0xa3, 0x23, 0x46, 0xe0, 0x2e, 0x31, 0x61, 0x65, 0xf3, 0x9b,
	0x04, 0x0f, 0x26, 0xa9, 0xff, 0x3a, 0xc1, 0x33, 0x82, 0xdf, 0xb1, 0x09, 0xa4, 0xc1, 0xb9, 0x9b,
	0x15, 0xa2, 0x44, 0x93, 0xfa, 0x92, 0x75, 0xdb, 0x29, 0xae, 0x08, 0x81, 0xba, 0x9e, 0x85, 0x58,
	0x93, 0x69, 0x99, 0x9e, 0x51, 0x1f, 0xee, 0x30, 0xc8, 0xf7, 0x49, 0xe0, 0x62, 0x4d, 0xe9, 0x4b,
	0x96, 0xea, 0x94, 0x4b, 0xc8, 0x00, 0xf0, 0x92, 0xd9, 0xd7, 0xb7, 0x38, 0xf0, 0x17, 0x44, 0x53,
	0x69, 0x43, 0xa9, 0x62, 0x5e, 0x83, 0x56, 0xd5, 0xe0, 0xe0, 0x34, 0x8e, 0xd6, 0x29, 0x46, 0xf7,
	0x40, 0x0e, 0x3c, 0x2a, 0x43, 0x75, 0xe4, 0xc0, 0x33, 0x7f, 0x30, 0xc1, 0xd3, 0xd8, 0xeb, 0x24,
	0x98, 0x8d, 0xcb, 0xc5, 0x38, 0x37, 0xa0, 0x9c, 0x36, 0xa0, 0xb6, 0x19, 0x38, 0xfb, 0xc7, 0x80,
	0x4e, 0x0d, 0x08, 0x9a, 0x0a, 0x03, 0xe6, 0x4b, 0xaa, 0x77, 0x8c, 0x57, 0xf8, 0x06, 0x7a, 0x73,
	0x64, 0x61, 0x9a, 0x23, 0xbf, 0x81, 0xfb, 0x7c, 0x6d, 0x1f, 0xa8, 0xda, 0x06, 0x60, 0x0d, 0xce,
	0xf3, 0x40, 0xe4, 0xe8, 0xc5, 0xd5, 0xbc, 0x82, 0xcb, 0x0a, 0xcc, 0xc9, 0xe5, 0x4f, 0x29, 0x23,
	0xf3, 0xd9, 0xca, 0x58, 0x5d, 0x7d, 0x49, 0x81, 0x22, 0x2a, 0x78, 0x42, 0x15, 0x94, 0x61, 0xb9,
	0xc7, 0x17, 0x94, 0x91, 0xf9, 0xff, 0x5f, 0xc6, 0x1c, 0xb7, 0x3c, 0x5c, 0xe0, 0x3e, 0xfd, 0x79,
	0x06, 0xca, 0x24, 0xf5, 0x51, 0x08, 0x17, 0x62, 0xf6, 0xaf, 0xec, 0x13, 0x5f, 0x96, 0x5d, 0x8d,
	0xa8, 0x3e, 0xea, 0xdc, 0xca, 0x17, 0x1a, 0xc2, 0x85, 0x98, 0xdc, 0x46, 0x3a, 0xa1, 0xb5, 0x99,
	0xae, 0x36, 0x7b, 0x19, 0x9d, 0x18, 0xbc, 0x46, 0x3a, 0xa1, 0xb5, 0x99, 0xae, 0x36, 0x90, 0xe8,
	0x33, 0xdc, 0x15, 0xd2, 0x68, 0xb5, 0x2f, 0x88, 0x75, 0xea, 0xc3, 0xae, 0x9d, 0x65, 0x2e, 0x21,
	0x87, 0x56, 0xfb, 0x76, 0xba, 0x70, 0xd5, 0x85, 0x30, 0xe3, 0x12, 0x12, 0x68, 0xb5, 0xaf, 0xa6,
	0x0b, 0x57, 0x5d, 0x30, 0x5f, 0x8d, 0x7f, 0xed, 0x0d, 0x69, 0xb7, 0x37, 0xa4, 0x3f, 0x7b, 0x43,
	0xfa, 0x7e, 0x30, 0x7a, 0xbb, 0x83, 0xd1, 0xfb, 0x7d, 0x30, 0x7a, 0x1f, 0xaf, 0xfd, 0x80, 0x2c,
	0xbe, 0xcc, 0x6d, 0x37, 0x0a, 0x07, 0x14, 0x75, 0xc0, 0x9f, 0xf4, 0xcd, 0xf1, 0x48, 0xb6, 0x31,
	0x4e, 0xe7, 0xb7, 0xe8, 0xeb, 0xfe, 0xec, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xfb, 0x8f,
	0x50, 0x3a, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateLottery(ctx context.Context, in *MsgCreateLottery, opts ...grpc.CallOption) (*MsgCreateLotteryResponse, error)
	UpdateLottery(ctx context.Context, in *MsgUpdateLottery, opts ...grpc.CallOption) (*MsgUpdateLotteryResponse, error)
	DeleteLottery(ctx context.Context, in *MsgDeleteLottery, opts ...grpc.CallOption) (*MsgDeleteLotteryResponse, error)
	CreateTicket(ctx context.Context, in *MsgCreateTicket, opts ...grpc.CallOption) (*MsgCreateTicketResponse, error)
	UpdateTicket(ctx context.Context, in *MsgUpdateTicket, opts ...grpc.CallOption) (*MsgUpdateTicketResponse, error)
	DeleteTicket(ctx context.Context, in *MsgDeleteTicket, opts ...grpc.CallOption) (*MsgDeleteTicketResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateLottery(ctx context.Context, in *MsgCreateLottery, opts ...grpc.CallOption) (*MsgCreateLotteryResponse, error) {
	out := new(MsgCreateLotteryResponse)
	err := c.cc.Invoke(ctx, "/l0k18.nftlotto.nftlotto.Msg/CreateLottery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLottery(ctx context.Context, in *MsgUpdateLottery, opts ...grpc.CallOption) (*MsgUpdateLotteryResponse, error) {
	out := new(MsgUpdateLotteryResponse)
	err := c.cc.Invoke(ctx, "/l0k18.nftlotto.nftlotto.Msg/UpdateLottery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLottery(ctx context.Context, in *MsgDeleteLottery, opts ...grpc.CallOption) (*MsgDeleteLotteryResponse, error) {
	out := new(MsgDeleteLotteryResponse)
	err := c.cc.Invoke(ctx, "/l0k18.nftlotto.nftlotto.Msg/DeleteLottery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTicket(ctx context.Context, in *MsgCreateTicket, opts ...grpc.CallOption) (*MsgCreateTicketResponse, error) {
	out := new(MsgCreateTicketResponse)
	err := c.cc.Invoke(ctx, "/l0k18.nftlotto.nftlotto.Msg/CreateTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTicket(ctx context.Context, in *MsgUpdateTicket, opts ...grpc.CallOption) (*MsgUpdateTicketResponse, error) {
	out := new(MsgUpdateTicketResponse)
	err := c.cc.Invoke(ctx, "/l0k18.nftlotto.nftlotto.Msg/UpdateTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTicket(ctx context.Context, in *MsgDeleteTicket, opts ...grpc.CallOption) (*MsgDeleteTicketResponse, error) {
	out := new(MsgDeleteTicketResponse)
	err := c.cc.Invoke(ctx, "/l0k18.nftlotto.nftlotto.Msg/DeleteTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateLottery(context.Context, *MsgCreateLottery) (*MsgCreateLotteryResponse, error)
	UpdateLottery(context.Context, *MsgUpdateLottery) (*MsgUpdateLotteryResponse, error)
	DeleteLottery(context.Context, *MsgDeleteLottery) (*MsgDeleteLotteryResponse, error)
	CreateTicket(context.Context, *MsgCreateTicket) (*MsgCreateTicketResponse, error)
	UpdateTicket(context.Context, *MsgUpdateTicket) (*MsgUpdateTicketResponse, error)
	DeleteTicket(context.Context, *MsgDeleteTicket) (*MsgDeleteTicketResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateLottery(ctx context.Context, req *MsgCreateLottery) (*MsgCreateLotteryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLottery not implemented")
}
func (*UnimplementedMsgServer) UpdateLottery(ctx context.Context, req *MsgUpdateLottery) (*MsgUpdateLotteryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLottery not implemented")
}
func (*UnimplementedMsgServer) DeleteLottery(ctx context.Context, req *MsgDeleteLottery) (*MsgDeleteLotteryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLottery not implemented")
}
func (*UnimplementedMsgServer) CreateTicket(ctx context.Context, req *MsgCreateTicket) (*MsgCreateTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTicket not implemented")
}
func (*UnimplementedMsgServer) UpdateTicket(ctx context.Context, req *MsgUpdateTicket) (*MsgUpdateTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTicket not implemented")
}
func (*UnimplementedMsgServer) DeleteTicket(ctx context.Context, req *MsgDeleteTicket) (*MsgDeleteTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTicket not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateLottery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLottery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLottery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/l0k18.nftlotto.nftlotto.Msg/CreateLottery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLottery(ctx, req.(*MsgCreateLottery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLottery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLottery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLottery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/l0k18.nftlotto.nftlotto.Msg/UpdateLottery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLottery(ctx, req.(*MsgUpdateLottery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLottery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLottery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLottery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/l0k18.nftlotto.nftlotto.Msg/DeleteLottery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLottery(ctx, req.(*MsgDeleteLottery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTicket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/l0k18.nftlotto.nftlotto.Msg/CreateTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTicket(ctx, req.(*MsgCreateTicket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTicket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/l0k18.nftlotto.nftlotto.Msg/UpdateTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTicket(ctx, req.(*MsgUpdateTicket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTicket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/l0k18.nftlotto.nftlotto.Msg/DeleteTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTicket(ctx, req.(*MsgDeleteTicket))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "l0k18.nftlotto.nftlotto.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLottery",
			Handler:    _Msg_CreateLottery_Handler,
		},
		{
			MethodName: "UpdateLottery",
			Handler:    _Msg_UpdateLottery_Handler,
		},
		{
			MethodName: "DeleteLottery",
			Handler:    _Msg_DeleteLottery_Handler,
		},
		{
			MethodName: "CreateTicket",
			Handler:    _Msg_CreateTicket_Handler,
		},
		{
			MethodName: "UpdateTicket",
			Handler:    _Msg_UpdateTicket_Handler,
		},
		{
			MethodName: "DeleteTicket",
			Handler:    _Msg_DeleteTicket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nftlotto/tx.proto",
}

func (m *MsgCreateLottery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLottery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLottery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DrawHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DrawHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.TicketPrice != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TicketPrice))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateLotteryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLotteryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLotteryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLottery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLottery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLottery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DrawHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DrawHeight))
		i--
		dAtA[i] = 0x28
	}
	if m.TicketPrice != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TicketPrice))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLotteryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLotteryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLotteryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLottery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLottery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLottery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLotteryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLotteryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLotteryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTicket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTicket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTicket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Lottery != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lottery))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTicket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTicket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTicket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Lottery != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Lottery))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTicket) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTicket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTicket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTicketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTicketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTicketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateLottery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TicketPrice != 0 {
		n += 1 + sovTx(uint64(m.TicketPrice))
	}
	if m.DrawHeight != 0 {
		n += 1 + sovTx(uint64(m.DrawHeight))
	}
	return n
}

func (m *MsgCreateLotteryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateLottery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TicketPrice != 0 {
		n += 1 + sovTx(uint64(m.TicketPrice))
	}
	if m.DrawHeight != 0 {
		n += 1 + sovTx(uint64(m.DrawHeight))
	}
	return n
}

func (m *MsgUpdateLotteryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteLottery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteLotteryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTicket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Lottery != 0 {
		n += 1 + sovTx(uint64(m.Lottery))
	}
	return n
}

func (m *MsgCreateTicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTicket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Lottery != 0 {
		n += 1 + sovTx(uint64(m.Lottery))
	}
	return n
}

func (m *MsgUpdateTicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTicket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTicketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateLottery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLottery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLottery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TicketPrice", wireType)
			}
			m.TicketPrice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TicketPrice |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DrawHeight", wireType)
			}
			m.DrawHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DrawHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLotteryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLotteryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLotteryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLottery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLottery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLottery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TicketPrice", wireType)
			}
			m.TicketPrice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TicketPrice |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DrawHeight", wireType)
			}
			m.DrawHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DrawHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLotteryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLotteryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLotteryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLottery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLottery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLottery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLotteryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLotteryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLotteryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTicket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTicket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTicket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lottery", wireType)
			}
			m.Lottery = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lottery |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTicket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTicket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTicket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lottery", wireType)
			}
			m.Lottery = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Lottery |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTicket) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTicket: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTicket: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTicketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTicketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTicketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
